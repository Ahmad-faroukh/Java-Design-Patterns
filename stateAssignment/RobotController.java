package stateAssignment;


/**
 *
 * @author ACER E15
 */
public class RobotController extends javax.swing.JFrame {

    Robot myRobot = null;

    /**
     * Creates new form RobotController
     */
    public RobotController() {
        initComponents();
        myRobot = new Robot();

        enemyStatusBG.add(playerApproachesRB);
        enemyStatusBG.add(playerRunsRB);

        robotHealthBG.add(fullHealthRB);
        robotHealthBG.add(lowHealthRB);
        robotHealthBG.add(noHealthRB);

        robotAmmoBG.add(fullAmmoRB);
        robotAmmoBG.add(lowAmmoRB);
        
        fullHealthRB.setSelected(true);
        fullAmmoRB.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enemyStatusBG = new javax.swing.ButtonGroup();
        robotHealthBG = new javax.swing.ButtonGroup();
        robotAmmoBG = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        playerApproachesRB = new javax.swing.JRadioButton();
        playerRunsRB = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        fullHealthRB = new javax.swing.JRadioButton();
        lowHealthRB = new javax.swing.JRadioButton();
        noHealthRB = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        fullAmmoRB = new javax.swing.JRadioButton();
        lowAmmoRB = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Enemy Status :-");

        playerApproachesRB.setText("Player Approaching");

        playerRunsRB.setText("Player Running Away");

        jLabel2.setText("Robot Health :-");

        fullHealthRB.setText("Full");

        lowHealthRB.setText("Low");

        noHealthRB.setText("Non");

        jLabel3.setText("Robot Ammo :-");

        fullAmmoRB.setText("Full");

        lowAmmoRB.setText("Low");

        jButton1.setText("Robot Action");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(playerApproachesRB))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(56, 56, 56)
                                        .addComponent(fullHealthRB))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(fullAmmoRB)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lowAmmoRB)
                                    .addComponent(lowHealthRB))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(playerRunsRB)
                            .addComponent(noHealthRB))))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playerApproachesRB)
                    .addComponent(playerRunsRB))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fullHealthRB)
                    .addComponent(lowHealthRB)
                    .addComponent(noHealthRB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lowAmmoRB)
                    .addComponent(fullAmmoRB))
                .addGap(30, 30, 30)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (playerApproachesRB.isSelected()) {
            myRobot.playerApproaches();
        }
        if (playerRunsRB.isSelected()) {
            myRobot.playerRuns();
        }
        if (fullHealthRB.isSelected()) {
            myRobot.fullHealth();
        }
        if (lowHealthRB.isSelected()) {
            myRobot.lowHealth();
        }
        if (noHealthRB.isSelected()) {
            myRobot.noHealth();
        }
        if (fullAmmoRB.isSelected()) {
            myRobot.fullAmmo();
        }
        if (lowAmmoRB.isSelected()) {
            myRobot.lowAmmo();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RobotController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RobotController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RobotController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RobotController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RobotController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup enemyStatusBG;
    private javax.swing.JRadioButton fullAmmoRB;
    private javax.swing.JRadioButton fullHealthRB;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton lowAmmoRB;
    private javax.swing.JRadioButton lowHealthRB;
    private javax.swing.JRadioButton noHealthRB;
    private javax.swing.JRadioButton playerApproachesRB;
    private javax.swing.JRadioButton playerRunsRB;
    private javax.swing.ButtonGroup robotAmmoBG;
    private javax.swing.ButtonGroup robotHealthBG;
    // End of variables declaration//GEN-END:variables
}
